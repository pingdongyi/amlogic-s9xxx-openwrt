#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description:   Build OpenWrt with Image Builder
# Instructions:  https://openwrt.org/docs/guide-user/additional-software/imagebuilder
# Download from: https://downloads.openwrt.org/releases
#                https://downloads.immortalwrt.org/releases
#=====================================================================================

name: Build OpenWrt with ImageBuilder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      releases_branch:
        description: "Select the releases branch"
        required: false
        default: "immortalwrt:24.10.0"
        type: choice
        options:
          - openwrt:24.10.0
          - immortalwrt:24.10.0
      openwrt_board:
        description: "Select device board"
        required: false
        default: "sv-33a6x"
        type: choice
        options:
          - dg3399
          - sv-33a6x
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "6.1.y_6.12.y"
        type: choice
        options:
          - 5.4.y
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 6.12.y
          - 5.4.y_5.10.y
          - 5.15.y_6.1.y
          - 6.1.y_6.12.y
          - 6.1.y_6.6.y
          - 6.6.y_6.12.y
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "ophub/kernel"
        type: choice
        options:
          - ophub/kernel
      kernel_usage:
        description: "Set the tags of the stable kernel."
        required: false
        default: "stable"
        type: choice
        options:
          - stable
          - flippy
          - dev
          - beta
      builder_name:
        description: "Set OpenWrt builder signature."
        required: false
        default: "sign"
        type: choice
        options:
          - ophub
          - angel
          - sign

env:
  TZ: America/New_York
  IMAGEBUILDER_SH: config/imagebuilder/imagebuilder.sh

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) 2>/dev/null
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo swapoff -a
          sudo rm -f /swapfile /mnt/swapfile
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
          sudo rm -rf ~/{.cargo,.dotnet,.rustup}
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Create simulated physical disk
        run: |
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img
          sudo truncate -s "${root_size}"G /root.img
          sudo losetup /dev/loop6 /mnt/mnt.img
          sudo losetup /dev/loop7 /root.img
          sudo pvcreate /dev/loop6
          sudo pvcreate /dev/loop7
          sudo vgcreate github /dev/loop6 /dev/loop7
          sudo lvcreate -n runner -l 100%FREE github
          sudo mkfs.xfs /dev/github/runner
          sudo mkdir -p /builder
          sudo mount /dev/github/runner /builder
          sudo chown -R runner.runner /builder
          df -Th

      - name: Build OpenWrt Rootfs [ ${{ inputs.releases_branch }} ]
        id: imagebuilder
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          RELEASES_BRANCH="${{ inputs.releases_branch }}"
          chmod +x ${IMAGEBUILDER_SH}
          ${IMAGEBUILDER_SH} ${RELEASES_BRANCH}
          echo "RELEASES_TAG=${RELEASES_BRANCH/:/_}" >> ${GITHUB_ENV}
          echo "build_tag=OpenWrt_imagebuilder_${{ env.RELEASES_TAG }}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Clear server space
        id: clean
        if: ${{ steps.imagebuilder.outputs.status }} == 'success' && !cancelled()
        run: |
          cd imagebuilder
          [[ -d "output" ]] || mkdir output
          cp -f bin/targets/*/*/*rootfs.tar.gz output/
          cp -f .config output/config
          rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null

          # Generate sha256sum file
          cd output/
          for file in *; do [[ ! -d "${file}" ]] && sha256sum "${file}" >"${file}.sha"; done

          [[ -d "/builder/openwrt" ]] || mkdir -p /builder/openwrt
          ln -sf /builder/openwrt /home/runner/work/_actions/pingdongyi/amlogic-s9xxx-openwrt/main/openwrt
          df -hT ${PWD}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload OpenWrt to Release
        uses: ncipollo/release-action@main
        if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.imagebuilder.outputs.build_tag }}
          artifacts: imagebuilder/output/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Packaging OpenWrt
        if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
        uses: pingdongyi/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: imagebuilder/output/*rootfs.tar.gz
          openwrt_board: ${{ inputs.openwrt_board }}
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: ${{ inputs.auto_kernel }}
          kernel_repo: ${{ inputs.kernel_repo }}
          kernel_usage: ${{ inputs.kernel_usage }}
          builder_name: ${{ inputs.builder_name }}

      - name: Upload the packaged OpenWrt
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.imagebuilder.outputs.build_tag }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### OpenWrt Image information
            - Default IP: 192.168.1.1
            - Default username: root
            - Default password: password
            - Default WIFI name: OpenWrt
            - Default WIFI password: none
            ### Install to EMMC
            - Login to OpenWrt → System → Amlogic Service → Install OpenWrt
            ### OpenWrt Image Verification
            - sha256sum
